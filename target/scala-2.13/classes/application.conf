default-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 8
  }
}

thread-pool-dispatcher2 {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 2
  }
  throughput = 100
}

thread-pool-dispatcher4 {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 4
  }
  throughput = 100
}

thread-pool-dispatcher8 {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 8
  }
  throughput = 100
}

thread-pool-dispatcher16 {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}

thread-pool-dispatcher32 {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 1
}

pinned-dispatcher {
    type = PinnedDispatcher
    "executor" : "thread-pool-executor",
    "thread-pool-executor" : {
        "allow-core-timeout" : "off"
    },
    "type" : "PinnedDispatcher"
}

my-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = PinnedDispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the fork join pool
  thread-pool-executor {
    allow-core-timeout = off
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}